<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>01单细胞文献数据</title>
    <link href="/2024/05/29/01%E5%8D%95%E7%BB%86%E8%83%9E%E6%96%87%E7%8C%AE%E6%95%B0%E6%8D%AE/"/>
    <url>/2024/05/29/01%E5%8D%95%E7%BB%86%E8%83%9E%E6%96%87%E7%8C%AE%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="单细胞文章数据使用"><a href="#单细胞文章数据使用" class="headerlink" title="单细胞文章数据使用"></a>单细胞文章数据使用</h1><blockquote><p>文章名: scRNA-seq profiling of breast cancer tumors, BRCA1 mutant pre-neoplastic mammary gland cells and normal mammary gland cells</p><p>文章链接：<a href="https://www.embopress.org/doi/full/10.15252/embj.2020107333">https://www.embopress.org/doi/full/10.15252/embj.2020107333</a></p><p>数据地址：<a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE161529">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE161529</a></p></blockquote><p>样本信息：</p><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_bfd48d0b6a82a75ad25fa0b39f18d152.png"></p><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_1a042b91e7f2ec4f4fee990e31d60c6f.png"></p><h3 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载</span><br>wget -O GSE161529_RAW.tar https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE161529 <br>wget -O GSE161529_features.tsv.gz https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE161529&amp;format=file&amp;file=GSE161529%5Ffeatures%2Etsv%2Egz<br><span class="hljs-comment"># 解包解压</span><br>tar -xvf GSE161529_RAW.tar<br>gunzip GSE161529_features.tsv.gz<br></code></pre></td></tr></table></figure><h3 id="将数据转换成R包Seurat输入格式"><a href="#将数据转换成R包Seurat输入格式" class="headerlink" title="将数据转换成R包Seurat输入格式"></a>将数据转换成R包Seurat输入格式</h3><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_e404480bf9542f14dbc1b12c515a266e.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.gz &gt;&gt; sample.txt<br><span class="hljs-built_in">cd</span> /root/wangje/Project/GSE161529<br>baseDir=/root/wangje/Project/GSE161529<br><span class="hljs-keyword">while</span> IFS= <span class="hljs-built_in">read</span> -r line; <span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">mkdir</span> -p  <span class="hljs-variable">$&#123;<span class="hljs-variable">$&#123;<span class="hljs-variable">$&#123;line&#125;</span>#*_&#125;</span>%-*&#125;</span><br>  pp=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$line</span>&quot;</span> | awk -F <span class="hljs-string">&#x27;-&#x27;</span> <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span>)<br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$pp</span><br>  dir_name=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;line#*_&#125;</span>&quot;</span><br>  dir_name=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;dir_name%-*&#125;</span>&quot;</span><br>  target_dir=<span class="hljs-string">&quot;./<span class="hljs-variable">$&#123;dir_name&#125;</span>&quot;</span><br>  target_link=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;target_dir&#125;</span>/<span class="hljs-variable">$&#123;pp&#125;</span>&quot;</span><br>  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>&quot;</span><br>  <span class="hljs-built_in">ln</span> -s <span class="hljs-string">&quot;<span class="hljs-variable">$baseDir</span>/<span class="hljs-variable">$line</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$target_link</span>&quot;</span><br>  <span class="hljs-built_in">ln</span> -s <span class="hljs-string">&quot;<span class="hljs-variable">$baseDir</span>/features.tsv.gz&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$target_dir</span>/features.tsv.gz&quot;</span><br><span class="hljs-keyword">done</span> &lt; <span class="hljs-string">&quot;./sample.txt&quot;</span><br></code></pre></td></tr></table></figure><p>样本数据中包括了样本上皮细胞数据和样本的淋巴结数据，这两个数据可以先不使用。</p><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_8e65ab087ffbddd864c8f490e90b8fe5.png"></p><h3 id="生成Seurat对象数据"><a href="#生成Seurat对象数据" class="headerlink" title="生成Seurat对象数据"></a>生成Seurat对象数据</h3><blockquote><p>这里使用的Seurat Version 4.4.3</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R">suppressMessages<span class="hljs-punctuation">(</span>suppressWarnings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">&#123;</span><br>  library<span class="hljs-punctuation">(</span>Seurat<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 4.3</span><br>  library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>patchwork<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>SCP<span class="hljs-punctuation">)</span> <span class="hljs-comment"># plot</span><br>  library<span class="hljs-punctuation">(</span>scCustomize<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ggpubr<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ggsignif<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>RColorBrewer<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ComplexHeatmap<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>harmony<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>pheatmap<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>grid<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>gridExtra<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>qs<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>setwd<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;/root/wangje/Project/GSE161529&#x27;</span><span class="hljs-punctuation">)</span><br>dirName <span class="hljs-operator">&lt;-</span> gsub<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;./&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-punctuation">,</span>list.dirs<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;.&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_3b98060d1db5b22aea32948030380423.png"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 去除上皮细胞和淋巴结的数据</span><br>dirName <span class="hljs-operator">&lt;-</span> dirName<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span>grep<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;Epi|LN&#x27;</span><span class="hljs-punctuation">,</span>dirName<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>scRNAlist <span class="hljs-operator">&lt;-</span> setNames<span class="hljs-punctuation">(</span>lapply<span class="hljs-punctuation">(</span>dirName<span class="hljs-punctuation">,</span>FUN<span class="hljs-operator">=</span><span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    message<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br>    RenameCells<span class="hljs-punctuation">(</span>CreateSeuratObject<span class="hljs-punctuation">(</span>Read10X<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>min.cells <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span>min.features <span class="hljs-operator">=</span> <span class="hljs-number">200</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>add.cell.id<span class="hljs-operator">=</span>x<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>dirName<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_7f3cb8689f517e6798834a9096856296.png"></p><blockquote><p>查看数据分布</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#合并数据</span><br>scRNA <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>scRNAlist<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>scRNA<br><span class="hljs-comment"># n object of class Seurat</span><br><span class="hljs-comment"># 25503 features across 329921 samples within 1 assay</span><br><span class="hljs-comment"># Active assay: RNA (25503 features, 0 variable features)</span><br><span class="hljs-comment">#  2 layers present: counts, data</span><br>library<span class="hljs-punctuation">(</span>magrittr<span class="hljs-punctuation">)</span><br>scRNA <span class="hljs-operator">%&lt;&gt;%</span> PercentageFeatureSet<span class="hljs-punctuation">(</span>pattern <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;^MT-&#x27;</span><span class="hljs-punctuation">,</span>col.name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;percent.mt&#x27;</span><span class="hljs-punctuation">)</span><br>scRNA<span class="hljs-operator">$</span>sample <span class="hljs-operator">&lt;-</span> stringr<span class="hljs-operator">::</span>str_split_fixed<span class="hljs-punctuation">(</span>rownames<span class="hljs-punctuation">(</span>scRNA<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;_[A|T|G|C].*&#x27;</span><span class="hljs-punctuation">,</span> n <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br> unique<span class="hljs-punctuation">(</span>scRNA<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#  [1] &quot;B1-KCF0894&quot;     &quot;B1-MH0023&quot;      &quot;B1-MH0033&quot;      &quot;B1-MH0090&quot;      &quot;ER-AH0319&quot;      &quot;ER-MH0001&quot;      &quot;ER-MH0025&quot;      &quot;ER-MH0029-7C&quot;</span><br><span class="hljs-comment">#  [9] &quot;ER-MH0029-9C&quot;   &quot;ER-MH0032&quot;      &quot;ER-MH0040&quot;      &quot;ER-MH0042&quot;      &quot;ER-MH0043-T&quot;    &quot;ER-MH0056-T&quot;    &quot;ER-MH0064-T&quot;    &quot;ER-MH0114-T3&quot;</span><br><span class="hljs-comment"># [17] &quot;ER-MH0125&quot;      &quot;ER-MH0151&quot;      &quot;ER-MH0163&quot;      &quot;ER-MH0167-T&quot;    &quot;ER-MH0173-T&quot;    &quot;ER-PM0360&quot;      &quot;HER2-AH0308&quot;    &quot;HER2-MH0031&quot;</span><br><span class="hljs-comment"># [25] &quot;HER2-MH0069&quot;    &quot;HER2-MH0161&quot;    &quot;HER2-MH0176&quot;    &quot;HER2-PM0337&quot;    &quot;mER-MH0068-T&quot;   &quot;mER-PM0178&quot;     &quot;N-MH0021-Total&quot; &quot;N-MH0023-Total&quot;</span><br><span class="hljs-comment"># [33] &quot;N-MH0064-Total&quot; &quot;N-MH0169-Total&quot; &quot;N-MH275-Total&quot;  &quot;N-MH288-Total&quot;  &quot;N-PM0019-Total&quot; &quot;N-PM0092-Total&quot; &quot;N-PM0095-Total&quot; &quot;N-PM0230-Total&quot;</span><br><span class="hljs-comment"># [41] &quot;N-PM0233-Total&quot; &quot;N-PM0342-Total&quot; &quot;N-PM0372-Total&quot; &quot;TN-B1-MH0131&quot;   &quot;TN-B1-MH0177&quot;   &quot;TN-B1-MH4031&quot;   &quot;TN-B1-Tum0554&quot;  &quot;TN-MH0114-T2&quot;</span><br><span class="hljs-comment"># [49] &quot;TN-MH0126&quot;      &quot;TN-MH0135&quot;      &quot;TN-SH0106&quot;</span><br>p1 <span class="hljs-operator">&lt;-</span> VlnPlot<span class="hljs-punctuation">(</span>scRNA<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;nCount_RNA&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;nFeature_RNA&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;percent.mt&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> group.by <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;sample&#x27;</span><span class="hljs-punctuation">,</span>pt.size <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_8f76179bb36294da0eb0681730df708e.png"></p><blockquote><p>数据粗过滤</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">filterP <span class="hljs-operator">&lt;-</span> scRNA<span class="hljs-operator">$</span>nFeature_RNA <span class="hljs-operator">&gt;=</span><span class="hljs-number">200</span> <span class="hljs-operator">&amp;</span> scRNA<span class="hljs-operator">$</span>nFeature_RNA <span class="hljs-operator">&lt;</span> <span class="hljs-number">5000</span> <span class="hljs-operator">&amp;</span> scRNA<span class="hljs-operator">$</span>percent.mt <span class="hljs-operator">&lt;</span><span class="hljs-number">15</span><br>scRNA <span class="hljs-operator">&lt;-</span> scRNA<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>filterP<span class="hljs-punctuation">]</span><br>scRNA<br><span class="hljs-comment"># An object of class Seurat</span><br><span class="hljs-comment"># 25503 features across 282938 samples within 1 assay</span><br><span class="hljs-comment"># Active assay: RNA (25503 features, 0 variable features)</span><br><span class="hljs-comment">#  2 layers present: counts, data</span><br>p1 <span class="hljs-operator">&lt;-</span> VlnPlot<span class="hljs-punctuation">(</span>scRNA<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;nCount_RNA&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;nFeature_RNA&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;percent.mt&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> group.by <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;sample&#x27;</span><span class="hljs-punctuation">,</span>pt.size <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_e511bae230a7f8780e9dcbec94570df0.png"></p><h3 id="去除双细胞"><a href="#去除双细胞" class="headerlink" title="去除双细胞"></a>去除双细胞</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>DoubletFinder<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>patchwork<span class="hljs-punctuation">)</span><br>scRNAlist <span class="hljs-operator">&lt;-</span> SplitObject<span class="hljs-punctuation">(</span>scRNA<span class="hljs-punctuation">,</span> split.by<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sample&#x27;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span><span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> NormalizeData<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> ScaleData<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> verbose <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> FindVariableFeatures<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> verbose <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> RunPCA<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> npcs <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">,</span> verbose <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> RunUMAP<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pca&quot;</span><span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> FindNeighbors<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pca&quot;</span><span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br>  scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> FindClusters<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> resolution <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br>message<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;双细胞检测....&quot;</span><span class="hljs-punctuation">)</span><br>detectDoublet <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span><br>  obj<span class="hljs-punctuation">,</span> <span class="hljs-comment">#seurat obj</span><br>  dims<span class="hljs-punctuation">,</span> <span class="hljs-comment">#Pc数目</span><br>  estDubRate<span class="hljs-punctuation">,</span> <span class="hljs-comment">#期望双细胞率，该值最好通过细胞在10X/Drop-Seq装置上的负载密度来估计</span><br>  ncores<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-comment">#线程数</span><br>  SCTransform<span class="hljs-punctuation">,</span><span class="hljs-comment">#True or False</span><br>  Homotypic<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span><span class="hljs-comment">#是否需要优化同源双细胞</span><br>  annotation<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span> <span class="hljs-comment">#听说最好是celltype</span><br>  <span class="hljs-comment">#use DoubletFinder packages</span><br>  require<span class="hljs-punctuation">(</span>DoubletFinder<span class="hljs-punctuation">)</span><span class="hljs-comment">#2.0.4</span><br>  <span class="hljs-comment">#select pK</span><br>  sweep.res.list <span class="hljs-operator">&lt;-</span> paramSweep<span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">,</span> PCs<span class="hljs-operator">=</span>dims<span class="hljs-punctuation">,</span> sct<span class="hljs-operator">=</span>SCTransform<span class="hljs-punctuation">,</span> num.cores<span class="hljs-operator">=</span>ncores<span class="hljs-punctuation">)</span><br>  sweep.stats <span class="hljs-operator">&lt;-</span> summarizeSweep<span class="hljs-punctuation">(</span>sweep.res.list<span class="hljs-punctuation">,</span> GT<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  bcmvn <span class="hljs-operator">&lt;-</span> find.pK<span class="hljs-punctuation">(</span>sweep.stats<span class="hljs-punctuation">)</span><br>  pK <span class="hljs-operator">&lt;-</span> bcmvn<span class="hljs-operator">$</span>pK<span class="hljs-punctuation">[</span>which.max<span class="hljs-punctuation">(</span>bcmvn<span class="hljs-operator">$</span>BCmetric<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  message<span class="hljs-punctuation">(</span>sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Using pK = %s...&quot;</span><span class="hljs-punctuation">,</span> pK<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-comment">#Doublet Proportion Estimate</span><br>  <span class="hljs-keyword">if</span><span class="hljs-punctuation">(</span>Homotypic<span class="hljs-operator">==</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    nExp_poi <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>estDubRate <span class="hljs-operator">*</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>Cells<span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-keyword">else</span><span class="hljs-punctuation">&#123;</span><br>    homotypic.prop <span class="hljs-operator">&lt;-</span> modelHomotypic<span class="hljs-punctuation">(</span>obj<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>annotation<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>    nExp_poi <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>estDubRate <span class="hljs-operator">*</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>Cells<span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    nExp_poi  <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>nExp_poi<span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">-</span>homotypic.prop<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  obj <span class="hljs-operator">&lt;-</span> doubletFinder<span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">,</span> PCs <span class="hljs-operator">=</span> dims<span class="hljs-punctuation">,</span> pN <span class="hljs-operator">=</span> <span class="hljs-number">0.25</span><span class="hljs-punctuation">,</span> pK <span class="hljs-operator">=</span> pK<span class="hljs-punctuation">,</span> nExp <span class="hljs-operator">=</span> nExp_poi<span class="hljs-punctuation">,</span> reuse.pANN <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> sct <span class="hljs-operator">=</span> SCTransform<span class="hljs-punctuation">)</span><br>  pann <span class="hljs-operator">&lt;-</span> grep<span class="hljs-punctuation">(</span>pattern<span class="hljs-operator">=</span><span class="hljs-string">&quot;^pANN&quot;</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>obj<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> value<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>  message<span class="hljs-punctuation">(</span>sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Using pANN = %s...&quot;</span><span class="hljs-punctuation">,</span> pann<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  classify <span class="hljs-operator">&lt;-</span> grep<span class="hljs-punctuation">(</span>pattern<span class="hljs-operator">=</span><span class="hljs-string">&quot;^DF.classifications&quot;</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>obj<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> value<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>  obj<span class="hljs-operator">$</span>pANN <span class="hljs-operator">&lt;-</span> obj<span class="hljs-punctuation">[[</span>pann<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>  obj<span class="hljs-operator">$</span>DF.classify <span class="hljs-operator">&lt;-</span> obj<span class="hljs-punctuation">[[</span>classify<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>  obj<span class="hljs-punctuation">[[</span>pann<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>  obj<span class="hljs-punctuation">[[</span>classify<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">&#125;</span><br><span class="hljs-comment">#分样预测双细胞</span><br><span class="hljs-comment"># 对每个样本进行分析</span><br>message<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span>Sys.time<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27; 开始进行双细胞检测...&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>scRNAlist <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    detectDoublet<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">30</span><span class="hljs-punctuation">,</span><br>    estDubRate<span class="hljs-operator">=</span><span class="hljs-number">0.075</span><span class="hljs-punctuation">,</span><br>    ncores <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> <br>    SCTransform<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> <br>    Homotypic<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> <br>   annotation<span class="hljs-operator">=</span><span class="hljs-string">&quot;seurat_clusters&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 合并文件</span><br>scRNA_harmony <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>scRNAlist<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>scRNAlist<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="查看细胞周期的影响"><a href="#查看细胞周期的影响" class="headerlink" title="查看细胞周期的影响"></a>查看细胞周期的影响</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>magrittr<span class="hljs-punctuation">)</span><br>scRNA_harmony <span class="hljs-operator">%&lt;&gt;%</span> NormalizeData<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>scRNA_harmony <span class="hljs-operator">%&lt;&gt;%</span> CellCycleScoring<span class="hljs-punctuation">(</span>g2m.features <span class="hljs-operator">=</span> cc.genes<span class="hljs-operator">$</span>g2m.genes<span class="hljs-punctuation">,</span><br>                                  s.features <span class="hljs-operator">=</span> cc.genes<span class="hljs-operator">$</span>s.genes<span class="hljs-punctuation">,</span><br>                                  g1.features <span class="hljs-operator">=</span> cc.genes<span class="hljs-operator">$</span>g1.genes<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_f212c24f2e4cfe53a674523bc3a7355b.png"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">DimPlot<span class="hljs-punctuation">(</span>scRNA<span class="hljs-punctuation">,</span>group.by <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Phase&#x27;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>BRAC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scRNA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/28/%E8%A7%86%E9%A2%91%E5%88%B6%E4%BD%9C/"/>
    <url>/2024/05/28/%E8%A7%86%E9%A2%91%E5%88%B6%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="视频制作"><a href="#视频制作" class="headerlink" title="视频制作"></a>视频制作</h2><h3 id="远程连接工具的使用"><a href="#远程连接工具的使用" class="headerlink" title="远程连接工具的使用"></a>远程连接工具的使用</h3><blockquote><p>windows系统</p></blockquote><h4 id="xshell"><a href="#xshell" class="headerlink" title="xshell"></a>xshell</h4><h4 id="Mobaxterm"><a href="#Mobaxterm" class="headerlink" title="Mobaxterm"></a>Mobaxterm</h4><blockquote><p>MAC系统</p></blockquote><h4 id="windterm"><a href="#windterm" class="headerlink" title="windterm"></a>windterm</h4><h4 id="tabby"><a href="#tabby" class="headerlink" title="tabby"></a>tabby</h4><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><blockquote><p>服务器和电脑之间文件传输</p></blockquote><h4 id="命令行传输"><a href="#命令行传输" class="headerlink" title="命令行传输"></a>命令行传输</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">lrzsz中的rz和sz命令<br>ftp和sftp<br></code></pre></td></tr></table></figure><h4 id="图形界面软件"><a href="#图形界面软件" class="headerlink" title="图形界面软件"></a>图形界面软件</h4><p>windows系统: Winscp</p><p>Mac系统：<a href="https://www.filezilla.cn/">FileZilla</a></p><blockquote><p>服务器和服务器之间传输</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">SCP<br>rcp<br>rsync<br></code></pre></td></tr></table></figure><h3 id="硬盘挂载"><a href="#硬盘挂载" class="headerlink" title="硬盘挂载"></a>硬盘挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mount<br>unmount<br></code></pre></td></tr></table></figure><h3 id="虚拟桌面或终端复用工具"><a href="#虚拟桌面或终端复用工具" class="headerlink" title="虚拟桌面或终端复用工具"></a>虚拟桌面或终端复用工具</h3><h4 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h4><h4 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h4><h3 id="服务器中conda的使用"><a href="#服务器中conda的使用" class="headerlink" title="服务器中conda的使用"></a>服务器中conda的使用</h3><h3 id="服务其中R包的安装方式"><a href="#服务其中R包的安装方式" class="headerlink" title="服务其中R包的安装方式"></a>服务其中R包的安装方式</h3><h4 id="conda-安装"><a href="#conda-安装" class="headerlink" title="conda 安装"></a>conda 安装</h4><h4 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h4><h4 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h4><h3 id="集群服务器的使用"><a href="#集群服务器的使用" class="headerlink" title="集群服务器的使用"></a>集群服务器的使用</h3><h4 id="计算节点和管理节点"><a href="#计算节点和管理节点" class="headerlink" title="计算节点和管理节点"></a>计算节点和管理节点</h4><h4 id="pbs任务管理器的使用"><a href="#pbs任务管理器的使用" class="headerlink" title="pbs任务管理器的使用"></a>pbs任务管理器的使用</h4><h5 id="任务提交及查询"><a href="#任务提交及查询" class="headerlink" title="任务提交及查询"></a>任务提交及查询</h5><h5 id="计算节点的切换"><a href="#计算节点的切换" class="headerlink" title="计算节点的切换"></a>计算节点的切换</h5><h5 id="任务终止"><a href="#任务终止" class="headerlink" title="任务终止"></a>任务终止</h5><h3 id="服务器终端radian使用R语言"><a href="#服务器终端radian使用R语言" class="headerlink" title="服务器终端radian使用R语言"></a>服务器终端radian使用R语言</h3><h3 id="服务器终端ipython使用python"><a href="#服务器终端ipython使用python" class="headerlink" title="服务器终端ipython使用python"></a>服务器终端ipython使用python</h3><h3 id="服务器中Rstudio使用R语言"><a href="#服务器中Rstudio使用R语言" class="headerlink" title="服务器中Rstudio使用R语言"></a>服务器中Rstudio使用R语言</h3><h3 id="服务器中jupyter使用python"><a href="#服务器中jupyter使用python" class="headerlink" title="服务器中jupyter使用python"></a>服务器中jupyter使用python</h3><h4 id="常用编辑器的使用"><a href="#常用编辑器的使用" class="headerlink" title="常用编辑器的使用"></a>常用编辑器的使用</h4><h5 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h5><h5 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java学习</title>
    <link href="/2024/05/28/java%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/05/28/java%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Java-基础语法"><a href="#Java-基础语法" class="headerlink" title="Java 基础语法"></a>Java 基础语法</h1><h3 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h3><p>Java语言提供了8种基本数据类型，分别是<strong>byte、short、int、long、float、double、boolean、char</strong></p><p>一个字节有8个比特位。</p><table><thead><tr><th>byte</th><th>8位</th><th>1个字节</th></tr></thead><tbody><tr><td>short</td><td>16位</td><td>2个字节</td></tr><tr><td>int</td><td>32位</td><td>4个字节</td></tr><tr><td>long</td><td>64位</td><td>8个字节</td></tr><tr><td>float</td><td>32位</td><td>4个字节</td></tr><tr><td>double</td><td>64位</td><td>8个字节</td></tr><tr><td>boolean</td><td>8位</td><td>1个字节</td></tr><tr><td>char</td><td>16位</td><td>2个字节</td></tr></tbody></table><p>字节最左位是符号位，例如：byte的最大值为2^(16-1)-1，最小值为-（2^15）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.New;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">dataType</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">byte</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br>        <span class="hljs-type">short</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> <span class="hljs-number">20</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">30</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> <span class="hljs-number">40</span>;<br>        <span class="hljs-type">float</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> <span class="hljs-number">50.0f</span>;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">60.0</span>;<br>        <span class="hljs-type">char</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;A&#x27;</span>;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">bo</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br>        System.out.println(<span class="hljs-string">&quot;byte: &quot;</span> + b);<br>        System.out.println(<span class="hljs-string">&quot;short: &quot;</span> + s);<br>        System.out.println(<span class="hljs-string">&quot;int: &quot;</span> + i);<br>        System.out.println(<span class="hljs-string">&quot;long: &quot;</span> + l);<br>        System.out.println(<span class="hljs-string">&quot;float: &quot;</span> + f);<br>        System.out.println(<span class="hljs-string">&quot;double: &quot;</span> + d);<br>        System.out.println(<span class="hljs-string">&quot;char: &quot;</span> + c);<br>        System.out.println(<span class="hljs-string">&quot;boolean: &quot;</span> + bo);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//byte: 10</span><br><span class="hljs-comment">//short: 20</span><br><span class="hljs-comment">//int: 30</span><br><span class="hljs-comment">//long: 40</span><br><span class="hljs-comment">//float: 50.0</span><br><span class="hljs-comment">//double: 60.0</span><br><span class="hljs-comment">//char: A</span><br><span class="hljs-comment">//boolean: true</span><br></code></pre></td></tr></table></figure><p>tips: 什么是双精度，什么是单精度？</p><p>在Java中，单精度（float）和双精度（double）是两种用于表示浮点数的数据类型。浮点数是用于表示实数（即有小数部分的数）的数值数据类型。这两种类型的主要区别在于它们的精度（即存储的数字的准确程度）和范围（即可以表示的最大和最小数值）。</p><ol><li><strong>单精度（float）</strong>：<ul><li>占用32位（4字节）的存储空间。</li><li>大约有7位有效数字。</li><li>表示的数值范围较小，但足够大多数日常计算使用。</li><li>在声明时，可以使用<code>float</code>关键字，但在赋值时，通常需要在数字后面加上<code>f</code>或<code>F</code>来表明这是一个单精度浮点数，例如：<code>float myFloat = 3.14f;</code>。</li></ul></li><li><strong>双精度（double）</strong>：<ul><li>占用64位（8字节）的存储空间。</li><li>大约有15-16位有效数字。</li><li>表示的数值范围更大，精度也更高。</li><li>在声明时，可以使用<code>double</code>关键字，例如：<code>double myDouble = 3.141592653589793;</code>。</li></ul></li></ol><p>由于双精度浮点数具有更高的精度和更大的范围，因此在大多数需要高精度计算的场景中，建议使用双精度浮点数。但是，如果你知道你的数据不需要那么高的精度，或者为了节省存储空间，可以使用单精度浮点数</p><h3 id="java中基础数据类型转换"><a href="#java中基础数据类型转换" class="headerlink" title="java中基础数据类型转换"></a>java中基础数据类型转换</h3><h4 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h4><p>当低精度向高精度转换的时候，可以进行自动类型转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">byte</span> -&gt; <span class="hljs-type">short</span> -&gt; <span class="hljs-type">int</span> -&gt; <span class="hljs-type">long</span> -&gt; <span class="hljs-type">float</span> -&gt; <span class="hljs-type">double</span><br><span class="hljs-type">char</span> -&gt; <span class="hljs-type">int</span> -&gt; <span class="hljs-type">long</span> -&gt; <span class="hljs-type">float</span> -&gt; <span class="hljs-type">double</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.New;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Type;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">dataType01</span> &#123;<br>   <span class="hljs-comment">// 定义一个方法，根据传入的对象，返回其数据类型</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDataType</span><span class="hljs-params">(Object obj)</span> &#123;<br>        <span class="hljs-keyword">if</span> (obj == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;null&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (obj <span class="hljs-keyword">instanceof</span> Integer) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;int&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (obj <span class="hljs-keyword">instanceof</span> Double) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;double&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (obj <span class="hljs-keyword">instanceof</span> Byte) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;byte&quot;</span>;<br>        &#125; <span class="hljs-comment">// ... 其他类型检查</span><br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> obj.getClass().getSimpleName();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">byte</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">127</span>;<br>        <span class="hljs-type">short</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> <span class="hljs-number">32767</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">2147483647</span>;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">123.456</span>;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> d * s;<br>        System.out.println(result);<br>        System.out.println(getDataType(result));<br>        System.out.println(<span class="hljs-string">&quot;-------------------&quot;</span>);<br>        <span class="hljs-type">char</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;A&#x27;</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">result1</span> <span class="hljs-operator">=</span> c + <span class="hljs-number">1</span>;<br>        System.out.println(result1);<br>        System.out.println(getDataType(result1));<br>    &#125;<br>&#125;<br><span class="hljs-comment">//4045282.7520000003</span><br><span class="hljs-comment">//double</span><br><span class="hljs-comment">//-------------------</span><br><span class="hljs-comment">//66</span><br><span class="hljs-comment">//int</span><br></code></pre></td></tr></table></figure><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><p>在Java中，强制类型转换（也称为窄化转换或<strong>向下转型</strong>）是一种显式地将一种数据类型的值转换为另一种数据类型的操作。<strong>这种转换在源类型和目标类型之间存在潜在的信息丢失风险时是必需的</strong>，因为编译器不会自动进行这样的转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.New;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">dataType02</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">20.5</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) b;<br>        System.out.println(a);<br>        System.out.println(a ==b ? <span class="hljs-string">&quot;Equal&quot;</span> : <span class="hljs-string">&quot;Not Equal&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//20</span><br><span class="hljs-comment">//Not Equal</span><br></code></pre></td></tr></table></figure><h3 id="java中流程控制"><a href="#java中流程控制" class="headerlink" title="java中流程控制"></a>java中流程控制</h3>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python中的闭包和装饰器</title>
    <link href="/2024/05/28/python%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
    <url>/2024/05/28/python%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="python中的闭包和装饰器"><a href="#python中的闭包和装饰器" class="headerlink" title="python中的闭包和装饰器"></a>python中的闭包和装饰器</h2><hr><p>title: python中的闭包和装饰器</p><p>date: 2024-01-14 16:35:20 </p><p>tags: - 原创 </p><p>categories: - python</p><hr><h3 id="引入闭包"><a href="#引入闭包" class="headerlink" title="引入闭包"></a>引入闭包</h3><p>在python的函数中，变量的作用域是有生命周期的，在函数运行完成以后，函数中的变量便会死去。出于种种原因，我们有时候需要在函数外部得到函数内的局部变量。但是，由于<a href="https://zhuanlan.zhihu.com/p/400388568">Python中作用域的搜索顺序</a>（”链式作用域”结构（chain scope）：子对象会一级一级地向上寻找所有父对象的变量），这一点通常是无法实现的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 函数中的变量的作用域</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun1</span>():<br>    n = <span class="hljs-number">1000</span><br><br><span class="hljs-built_in">print</span>(n)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/14/hbsoOEzdrnA3B8L.png" alt="image-20240114163423406"></p><p>在函数的外部访问函数内部的变量会报错，函数中的变量作用域是局部变量，在全局环境中无法访问。如果想要能够访问函数中的变量，可以在函数中再建立一个函数，然后返回函数中的内部函数，内部函数中再返回函数中的变量，这样就可以访问函数中的变量了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun1</span>():<br>    n = <span class="hljs-number">999</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fun2</span>():<br>        <span class="hljs-built_in">print</span>(n)<br>    <span class="hljs-keyword">return</span> fun2<br><br>var = fun1()<br>var()<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/14/5ux7zXi8J3YryVM.png" alt="image-20240114164022916"></p><p>从上面的程序中可以看出，外部函数的返回值是一个函数地址，调用函数地址就可以使用返回的函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun3</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello word&quot;</span>)<br><br><br><span class="hljs-built_in">print</span>(fun3)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/14/TWnB7HyDNSwbx3z.png" alt="image-20240114164410201"></p><h3 id="闭包的概念"><a href="#闭包的概念" class="headerlink" title="闭包的概念"></a>闭包的概念</h3><p>在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引<br>用。这样就构成了一个闭包。</p><p>一般情况下，在我们认知当中，如果一个函数结束，函数的内部所有东西都会释放掉，还给内存，局部变量都会消失。但是闭包是一种特殊情况，如果外函数在结束的时候发现有自己的临时变量将来会在内部函数中用到，就把这个临时变量绑定给了内部函数，然后自己再结束。</p><ul><li>作用1：闭包是将外层函数内的局部变量和外层函数的外部连接起来的一座桥梁。</li><li>作用2：将外层函数的变量持久地保存在内存中。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">x,y</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">z</span>):<br>        <span class="hljs-keyword">return</span> x+y+z<br>    <span class="hljs-keyword">return</span> f<br><br>d = add(<span class="hljs-number">5</span>,<span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(d(<span class="hljs-number">9</span>))<br><span class="hljs-built_in">print</span>(d(<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/14/5mYruainXA9JToO.png" alt="image-20240114170539463"></p><h3 id="引入装饰器"><a href="#引入装饰器" class="headerlink" title="引入装饰器"></a>引入装饰器</h3><p>实现一个应用，在函数执行之前输出befor，在函数执行之后使用after。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 使用最粗暴的方法</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;before&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>    <span class="hljs-keyword">return</span> value<br><span class="hljs-comment"># 调用func函数</span><br>func()<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/14/n8bNDrgXOVBf3w4.png" alt="image-20240114235427163"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 使用闭包</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br>func2 = func1(func)<br>result = func2()<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/tAdCaV9wOWFHech.png" alt="image-20240115000425465"></p><p>上方的func1(func)的结果是获得inner_func的函数地址，result的结果是调用inner_func函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;inner_func的函数地址<span class="hljs-subst">&#123;inner_func&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br>func2 = func1(func)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;func2的地址是<span class="hljs-subst">&#123;func2&#125;</span>&quot;</span>)<br>result = func2()<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/qs3hUaY89zWLwMc.png" alt="image-20240115003213204"></p><p>在python中可以使用装饰器来简化上方的过程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;inner_func的函数地址<span class="hljs-subst">&#123;inner_func&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br><span class="hljs-meta">@func1</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;func函数的地址是<span class="hljs-subst">&#123;func&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br>func()<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/bGMq93h25iLJ6uV.png" alt="image-20240115004506286"></p><h3 id="装饰器添加参数"><a href="#装饰器添加参数" class="headerlink" title="装饰器添加参数"></a>装饰器添加参数</h3><p>上面的例子都是无参函数，如果是有参数的函数，上面的程序是否还有正确运行呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;inner_func的函数地址<span class="hljs-subst">&#123;inner_func&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br><span class="hljs-meta">@func1</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;func函数的地址是<span class="hljs-subst">&#123;func&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;函数的参数是:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br>func(a=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/XPn89TWm47Cev3b.png" alt="image-20240115004956314"></p><p>在函数中添加*args和**kwargs</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>(<span class="hljs-params">*args, **kwargs</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;inner_func的函数地址<span class="hljs-subst">&#123;inner_func&#125;</span>&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f(*args, **kwargs)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br><span class="hljs-meta">@func1</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;func函数的地址是<span class="hljs-subst">&#123;func&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;函数的参数是:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br>func(a=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/ejLG8qOrfdpsZgR.png" alt="image-20240115010955515"></p><h3 id="装饰器扩展"><a href="#装饰器扩展" class="headerlink" title="装饰器扩展"></a>装饰器扩展</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>(<span class="hljs-params">*args, **kwargs</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;这是inner_func函数&quot;&quot;&quot;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f(*args, **kwargs)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br><span class="hljs-meta">@func1</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;这是func函数&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br><span class="hljs-built_in">print</span>(func.__doc__)<br><span class="hljs-built_in">print</span>(func.__name__)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/DIHiOhUlbckXSoP.png" alt="image-20240115011512053"></p><p>在函数中答应文档信息和函数名称，可以很明显的看出当func函数使用装饰器装饰后，文档和函数名均输出为inner_func的函数名和doc文档。这也与上方的闭包符合。如果想打印出func函数的文档信息和函数名称的话，需要使用functiontools函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func1</span>(<span class="hljs-params">f</span>):<br><span class="hljs-meta">    @functools.wraps(<span class="hljs-params">f</span>)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">inner_func</span>(<span class="hljs-params">*args, **kwargs</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;这是inner_func函数&quot;&quot;&quot;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before&quot;</span>)<br>        result = f(*args, **kwargs)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;after&quot;</span>)<br>        <span class="hljs-keyword">return</span> result<br><br>    <span class="hljs-keyword">return</span> inner_func<br><br><br><span class="hljs-meta">@func1</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;这是func函数&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是func函数&#x27;</span>)<br>    value = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    <span class="hljs-keyword">return</span> value<br><br><br>func(a=<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(func.__name__)<br><span class="hljs-built_in">print</span>(func.__doc__)<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/15/Lw9txQuzCXVnbiH.png" alt="image-20240115012317116"></p>]]></content>
    
    
    <categories>
      
      <category>python base</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章代码学习01</title>
    <link href="/2024/05/28/%E6%96%87%E7%AB%A0%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A001/"/>
    <url>/2024/05/28/%E6%96%87%E7%AB%A0%E4%BB%A3%E7%A0%81%E5%AD%A6%E4%B9%A001/</url>
    
    <content type="html"><![CDATA[<h1 id="R语言文章代码学习"><a href="#R语言文章代码学习" class="headerlink" title="R语言文章代码学习"></a>R语言文章代码学习</h1><blockquote><p>文章链接:Single-cell analysis of anti-BCMA CAR T cell therapy inpatients with central nervous system autoimmunity</p><p>代码地址:</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>R</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/27/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/"/>
    <url>/2024/05/27/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</url>
    
    <content type="html"><![CDATA[<h1 id="R语言中参数传递"><a href="#R语言中参数传递" class="headerlink" title="R语言中参数传递"></a>R语言中参数传递</h1><h2 id="getopt"><a href="#getopt" class="headerlink" title="getopt"></a>getopt</h2><blockquote><p><a href="https://github.com/trevorld/r-getopt">https://github.com/trevorld/r-getopt</a></p></blockquote><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">getopt<span class="hljs-punctuation">(</span><br>     spec <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>     opt <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>     command <span class="hljs-operator">=</span> get_Rscript_filename<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>     usage <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>     debug <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>space是一个参数矩阵，该参数矩阵至少包括4列，使用matrix(x,ncol&#x3D;4,byrow&#x3D;TRUE)。</p><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_984b6d64c8b842bc76ff984b2144752d.png"></p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>getopt<span class="hljs-punctuation">)</span><br><br>spac <span class="hljs-operator">=</span> matrix<span class="hljs-punctuation">(</span><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;first&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;f&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;integer&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;This is first!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;second&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;s&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;character&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is second!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;third&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;t&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;double&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is third!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;help&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-string">&quot;h&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;logical&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is Help!&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  byrow<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br>opt <span class="hljs-operator">=</span> getopt<span class="hljs-punctuation">(</span>spac<span class="hljs-punctuation">)</span><br>opt <span class="hljs-operator">=</span> getopt<span class="hljs-punctuation">(</span>spac<span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第一个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>first<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第二个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>second<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第三个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>third<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>将上面的代码封装在getopttest.R文件中，使用Rscript调用该文件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">Rscript getopttest.R <span class="hljs-operator">-</span>f <span class="hljs-number">123</span> <span class="hljs-operator">-</span>s ABC <span class="hljs-operator">-</span>t <span class="hljs-number">23</span><br><span class="hljs-comment"># 第一个参数 123 </span><br><span class="hljs-comment"># 第二个参数 ABC </span><br><span class="hljs-comment"># 第三个参数 23 </span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_57f3e0f010237aaa5bc996aaa2b7b754.png"></p><p>上面的代码不能打印帮助信息，可以添加</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#usage: If ‘TRUE’, argument ‘opt’ will be ignored and a usage</span><br><span class="hljs-comment">#         statement (character string) will be generated and returned</span><br><span class="hljs-comment">#         from ‘spec’.</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>getopt<span class="hljs-punctuation">)</span><br><br>spac <span class="hljs-operator">=</span> matrix<span class="hljs-punctuation">(</span><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;first&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;f&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;integer&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;This is first!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;second&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;s&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;character&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is second!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;third&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;t&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;double&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is third!&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;help&quot;</span><span class="hljs-punctuation">,</span>   <span class="hljs-string">&quot;h&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;logical&quot;</span><span class="hljs-punctuation">,</span>  <span class="hljs-string">&quot;This is Help!&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  byrow<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br>opt <span class="hljs-operator">=</span> getopt<span class="hljs-punctuation">(</span>spac<span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第一个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>first<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第二个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>second<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br>cat<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;第三个参数&#x27;</span><span class="hljs-punctuation">,</span>opt<span class="hljs-operator">$</span>third<span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加帮助信息</span><br><span class="hljs-keyword">if</span><span class="hljs-punctuation">(</span> <span class="hljs-operator">!</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>opt<span class="hljs-operator">$</span>help<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>opt<span class="hljs-operator">$</span>first<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>opt<span class="hljs-operator">$</span>third<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    cat<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span>getopt<span class="hljs-punctuation">(</span>spec<span class="hljs-operator">=</span>spac<span class="hljs-punctuation">,</span> usage <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    quit<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_23331c2b8d395b6cfed0a5dd63e097ae.png"></p><h2 id="getoptlong"><a href="#getoptlong" class="headerlink" title="getoptlong"></a>getoptlong</h2><blockquote><p><a href="https://github.com/jokergoo/GetoptLong">https://github.com/jokergoo/GetoptLong</a></p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;GetoptLong&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># CRAN</span><br>devtools<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;jokergoo/GetoptLong&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#github</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">GetoptLong<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">,</span> <br>         help_head <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <br>         help_foot <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <br>         envir <span class="hljs-operator">=</span> parent.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         argv_str <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> template_control <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         help_style <span class="hljs-operator">=</span> GetoptLong.options<span class="hljs-operator">$</span>help_style<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/26/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E7%BB%98%E5%9B%BE%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/05/26/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E7%BB%98%E5%9B%BE%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="R绘图系统"><a href="#R绘图系统" class="headerlink" title="R绘图系统"></a>R绘图系统</h1><blockquote><p>R绘图系统有4种</p></blockquote><ol><li>R基础绘图系统<ul><li>也称为基本绘图系统或Base Plotting System。</li><li>它对应于R的内置<code>graphics</code>包。</li><li>特点是需要事先计划，直观地实时反映绘图和分析数据的逻辑。</li><li>绘图过程通常包括两个步骤：首先使用如<code>plot()</code>函数画出图的主体，然后在此基础上进行修饰和添加。</li><li>适用于绘制2D图形。</li></ul></li><li>Lattice绘图系统<ul><li>Lattice Plotting System。</li><li>特点是一次函数调用即可生成图形。</li><li>特别适用于观测变量间的交互，例如在变量z的不同水平下，变量y如何随变量x变化。</li></ul></li><li>ggplot2绘图系统<ul><li>基于“图形的语法”（The Grammar of Graphics）的绘图系统。</li><li>将数据映射到几何客体（如点、线、条）的美学属性（如颜色、形状、大小）。</li><li>结合了基本绘图系统和Lattice绘图系统的特点。</li><li>自动处理标题、文字说明、空间等，但也允许通过添加注释进行修改。</li></ul></li><li>Grid绘图系统<ul><li>虽然在参考文章中提到了Grid绘图系统，但详细描述并不多。Grid系统提供了一系列不同的绘图函数，但并没有提供一套完整的绘图函数，因此通常不是直接用于绘图，而是作为其他绘图系统（如lattice和ggplot2）的基础。</li></ul></li><li>其他绘图系统和包<ul><li>除了上述四种主要的绘图系统外，R还有大量的扩展包，这些包提供了各种各样的绘图功能和选项，包括交互式绘图、3D绘图、动画等。</li></ul></li></ol><h2 id="R基础绘图"><a href="#R基础绘图" class="headerlink" title="R基础绘图"></a>R基础绘图</h2><h3 id="单变量绘图"><a href="#单变量绘图" class="headerlink" title="单变量绘图"></a>单变量绘图</h3><h2 id="grid绘图系统"><a href="#grid绘图系统" class="headerlink" title="grid绘图系统"></a>grid绘图系统</h2><h3 id="grid中的视口函数"><a href="#grid中的视口函数" class="headerlink" title="grid中的视口函数"></a>grid中的视口函数</h3><h4 id="grid-circle"><a href="#grid-circle" class="headerlink" title="grid.circle()"></a>grid.circle()</h4><p>根据给定的位置和半径绘图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.circle<span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    y<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-operator">+</span><span class="hljs-number">0.4</span><span class="hljs-operator">*</span><span class="hljs-built_in">sin</span><span class="hljs-punctuation">(</span>seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">*</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    r<span class="hljs-operator">=</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-operator">*</span><span class="hljs-built_in">cos</span><span class="hljs-punctuation">(</span>seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">*</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_77c734368e3d40ce4cdbd28d9b655414.png"></p><p>使用gpar函数修改颜色。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.circle<span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    y<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-operator">+</span><span class="hljs-number">0.4</span><span class="hljs-operator">*</span><span class="hljs-built_in">sin</span><span class="hljs-punctuation">(</span>seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">*</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    r<span class="hljs-operator">=</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-operator">*</span><span class="hljs-built_in">cos</span><span class="hljs-punctuation">(</span>seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">*</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_328e8931201b46b6fbff616f0e0d4413.png"></p><h4 id="gpar"><a href="#gpar" class="headerlink" title="gpar()"></a>gpar()</h4><table><thead><tr><th>col</th><th>线条和边框的颜色。</th></tr></thead><tbody><tr><td>fill</td><td>用于填充矩形、多边形等的颜色</td></tr><tr><td>alpha</td><td>Alpha 通道透明度</td></tr><tr><td>lty</td><td>线型</td></tr><tr><td>lwd</td><td>行宽</td></tr><tr><td>lex</td><td>应用于线宽的乘数</td></tr><tr><td>lineend</td><td>线端样式(圆形、对接、方形)</td></tr><tr><td>linejoin</td><td>线连接样式(圆形、斜接、斜角)</td></tr><tr><td>linemitre</td><td>线斜接限制(数量大于 1)</td></tr><tr><td>fontsize</td><td>文本大小(以点为单位)</td></tr><tr><td>cex</td><td>应用于字体大小的乘数</td></tr><tr><td>fontfamily</td><td>字体家族</td></tr><tr><td>fontface</td><td>字体(粗体、斜体……)</td></tr><tr><td>lineheight</td><td>行高是文本大小的倍数</td></tr><tr><td>font</td><td>Font Face(fontface 的别名；为了向后兼容)</td></tr></tbody></table><h4 id="line"><a href="#line" class="headerlink" title="line"></a>line</h4><p>grid.move.to函数绘制线条的起点位置，grid.line.to绘制线条的结束点。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.move.to<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span> name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>             draw <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br>grid.line.to<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>             arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>             gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> draw <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.move.to<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>grid.line.to<span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span>arrow <span class="hljs-operator">=</span> arrow<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;closed&quot;</span><span class="hljs-punctuation">,</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">25</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;black&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_68c0bfbe45a315208ddc8e2077520d04.png"></p><h4 id="grid-curve"><a href="#grid-curve" class="headerlink" title="grid.curve"></a>grid.curve</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.curve<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><br>curveGrob<span class="hljs-punctuation">(</span>x1<span class="hljs-punctuation">,</span> y1<span class="hljs-punctuation">,</span> x2<span class="hljs-punctuation">,</span> y2<span class="hljs-punctuation">,</span> default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>          curvature <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> angle <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> ncp <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>          square <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> squareShape <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>          inflect <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> open <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>          debug <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>          name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br>arcCurvature<span class="hljs-punctuation">(</span>theta<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><code>x1</code></th><th>指定起始点 x-location 的数值向量或单位对象。</th></tr></thead><tbody><tr><td><code>y1</code></td><td>指定起始点 y-location 的数值向量或单位对象。</td></tr><tr><td><code>x2</code></td><td>指定终点x-location的数值向量或单位对象。</td></tr><tr><td><code>y2</code></td><td>指定终点y-location的数值向量或单位对象。</td></tr><tr><td><code>default.units</code></td><td>一个字符串，指示仅以数值形式给出 <code>x1</code> 、 <code>y1</code> 、 <code>x2</code> 或 <code>y2</code> 时使用的默认单位。</td></tr><tr><td><code>curvature</code></td><td>给出曲率量的数值。负值产生左手曲线，正值产生右手曲线，零产生直线。</td></tr><tr><td><code>angle</code></td><td>0 到 180 之间的数值，给出曲线控制点的倾斜量。小于 90 的值使曲线向起点倾斜，大于 90 的值使曲线向终点倾斜。</td></tr><tr><td><code>ncp</code></td><td>用于绘制曲线的控制点的数量。更多控制点可创建更平滑的曲线。</td></tr><tr><td><code>shape</code></td><td>由 -1 到 1 之间的值组成的数值向量，用于控制曲线相对于其控制点的形状。有关更多详细信息，请参阅<code>grid.xspline</code>。</td></tr><tr><td><code>square</code></td><td>控制是否以 city-block 方式或倾斜方式创建曲线控制点的逻辑值。当 <code>ncp</code> 为 1 并且 <code>angle</code> 为 90 时，这通常是 <code>TRUE</code> ，否则可能应设置为 <code>FALSE</code> (请参见下面的示例)。</td></tr><tr><td><code>squareShape</code></td><td><code>shape</code> 值，用于控制曲线相对于在 <code>square</code> 为 <code>TRUE</code> 时插入的任何其他控制点的行为。</td></tr><tr><td><code>inflect</code></td><td>一个逻辑值，指定曲线是否应切成两半并反转(请参见下面的示例)。</td></tr><tr><td><code>arrow</code></td><td>说明放置在曲线两端的箭头的列表，由 <code>arrow</code> 函数生成。</td></tr><tr><td><code>open</code></td><td>一个逻辑值，指示是否闭合曲线(连接起点和终点)。</td></tr><tr><td><code>debug</code></td><td>指示是否应绘制调试信息的逻辑值。</td></tr><tr><td><code>name</code></td><td>字符标识符。</td></tr><tr><td><code>gp</code></td><td>类 <code>&quot;gpar&quot;</code> 的对象，通常是调用函数 <code>gpar</code> 的输出。这本质上是图形参数设置的列表。</td></tr><tr><td><code>vp</code></td><td>网格视口对象(或 NULL)。</td></tr><tr><td><code>...</code></td><td>要传递给 <code>curveGrob</code> 的参数。</td></tr><tr><td><code>theta</code></td><td>角度(以度为单位)。</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.curve<span class="hljs-punctuation">(</span>x1 <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>           y1<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>           x2<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>           y2<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>           arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;closed&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">,</span>lwd<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           angle<span class="hljs-operator">=</span><span class="hljs-number">130</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_4e670b373f9b8b3c960457e374907968.png"></p><h4 id="grid-segments"><a href="#grid-segments" class="headerlink" title="grid.segments"></a>grid.segments</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.segments<span class="hljs-punctuation">(</span>x0 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y0 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              x1 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y1 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>              arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>              name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> draw <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br>segmentsGrob<span class="hljs-punctuation">(</span>x0 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y0 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              x1 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y1 <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>              arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><code>x0</code></th><th>表示线段起始 x-values 的数字。</th></tr></thead><tbody><tr><td><code>y0</code></td><td>表示线段起始 y-values 的数字。</td></tr><tr><td><code>x1</code></td><td>表示线段停止x-values的数字。</td></tr><tr><td><code>y1</code></td><td>表示线段停止y-values的数字。</td></tr><tr><td><code>default.units</code></td><td>一个字符串。</td></tr><tr><td><code>arrow</code></td><td>说明放置在线段两端的箭头的列表，由 <code>arrow</code> 函数生成。</td></tr><tr><td><code>name</code></td><td>字符标识符。</td></tr><tr><td><code>gp</code></td><td>类 <code>&quot;gpar&quot;</code> 的对象，通常是调用函数 <code>gpar</code> 的输出。这本质上是图形参数设置的列表。</td></tr><tr><td><code>draw</code></td><td>指示是否应生成图形输出的逻辑值。</td></tr><tr><td><code>vp</code></td><td>网格视口对象(或 NULL)。</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.segments<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>              arrow <span class="hljs-operator">=</span> arrow<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">25</span><span class="hljs-punctuation">,</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;closed&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;black&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_5a931f7c6fc00aa446c3897242aa7dd9.png"></p><h4 id="grid-ployline"><a href="#grid-ployline" class="headerlink" title="grid.ployline"></a>grid.ployline</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">polylineGrob<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             id<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> id.lengths<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>             default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>             arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>             gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><code>x</code></th><th>指定 x 值的数值向量或单位对象。</th></tr></thead><tbody><tr><td><code>y</code></td><td>指定 y 值的数值向量或单位对象。</td></tr><tr><td><code>default.units</code></td><td>指示仅以数字向量形式给出 <code>x</code> 或 <code>y</code> 时要使用的默认单位的字符串。</td></tr><tr><td><code>arrow</code></td><td>描述要放置在线条两端的箭头的列表，由 <code>arrow</code> 函数生成。</td></tr><tr><td><code>name</code></td><td>字符标识符。</td></tr><tr><td><code>gp</code></td><td>类 <code>&quot;gpar&quot;</code> 的对象，通常是调用函数 <code>gpar</code> 的输出。这基本上是图形参数设置的列表。</td></tr><tr><td><code>draw</code></td><td>指示是否应生成图形输出的逻辑值。</td></tr><tr><td><code>vp</code></td><td>网格视口对象（或 NULL）。</td></tr><tr><td><code>id</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分成多行的数值向量。所有具有相同 <code>id</code> 的位置都属于同一线路。</td></tr><tr><td><code>id.lengths</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分成多行的数值向量。指定组成单独行的连续位置块。</td></tr><tr><td><code>...</code></td><td>参数传递至 <code>polylineGrob</code> 。</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.polyline<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>outer<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             y<span class="hljs-operator">=</span>outer<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             id.lengths<span class="hljs-operator">=</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> lwd<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_d29712265d28d6fe36e0b4e9b855c6dc.png"></p><h4 id="grid-xpline"><a href="#grid-xpline" class="headerlink" title="grid.xpline"></a>grid.xpline</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.xspline<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><br>xsplineGrob<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            id <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> id.lengths <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>            default.units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>            shape <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> open <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> arrow <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> repEnds <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>            name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> vp <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><code>x</code></th><th>指定样条控制点x-locations的数值向量或单位对象。</th></tr></thead><tbody><tr><td><code>y</code></td><td>指定样条控制点y-locations的数值向量或单位对象。</td></tr><tr><td><code>id</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分成多个 xsplines 的数值向量。具有相同 <code>id</code> 的所有位置都属于同一 xspline。</td></tr><tr><td><code>id.lengths</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分隔成多个 xspline 的数值向量。指定构成单独xspline 的连续位置块。</td></tr><tr><td><code>default.units</code></td><td>指示 <code>x</code> 或 <code>y</code> 仅作为数值向量给出时使用的默认单位的字符串。</td></tr><tr><td><code>shape</code></td><td>值介于 -1 和 1 之间的数值向量，用于控制样条线相对于控制点的形状。</td></tr><tr><td><code>open</code></td><td>指示样条线是直线还是闭合形状的逻辑值。</td></tr><tr><td><code>arrow</code></td><td>说明要放置在 xspline 两端的箭头的列表，由 <code>arrow</code> 函数生成。</td></tr><tr><td><code>repEnds</code></td><td>一个逻辑值，指示是否应复制第一个和最后一个控制点来绘制曲线(请参阅下面的详细信息)。</td></tr><tr><td><code>name</code></td><td>字符标识符。</td></tr><tr><td><code>gp</code></td><td>类 <code>&quot;gpar&quot;</code> 的对象，通常是调用函数 <code>gpar</code> 的输出。这本质上是图形参数设置的列表。</td></tr><tr><td><code>vp</code></td><td>网格视口对象(或 NULL)。</td></tr><tr><td><code>...</code></td><td>要传递给 <code>xsplineGrob</code> 的参数。</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.75</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.75</span><span class="hljs-punctuation">)</span><br>y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.75</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.75</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.25</span><span class="hljs-punctuation">)</span><br><br>xsplineTest <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>s<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> j<span class="hljs-punctuation">,</span> open<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>layout.pos.col<span class="hljs-operator">=</span>j<span class="hljs-punctuation">,</span> layout.pos.row<span class="hljs-operator">=</span>i<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  grid.points<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> default.units<span class="hljs-operator">=</span><span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span> pch<span class="hljs-operator">=</span><span class="hljs-number">16</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;mm&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  grid.xspline<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span>s<span class="hljs-punctuation">,</span> open<span class="hljs-operator">=</span>open<span class="hljs-punctuation">,</span> gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;grey&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  grid.text<span class="hljs-punctuation">(</span>s<span class="hljs-punctuation">,</span> gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;grey&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            x<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> unit<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;mm&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            y<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span>y<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> unit<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;mm&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            hjust<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            vjust<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>width<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> just<span class="hljs-operator">=</span><span class="hljs-string">&quot;left&quot;</span><span class="hljs-punctuation">,</span><br>                      layout<span class="hljs-operator">=</span>grid.layout<span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> respect<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>layout.pos.row<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Open Splines&quot;</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> just<span class="hljs-operator">=</span><span class="hljs-string">&quot;bottom&quot;</span><span class="hljs-punctuation">)</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>width<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> just<span class="hljs-operator">=</span><span class="hljs-string">&quot;right&quot;</span><span class="hljs-punctuation">,</span><br>                      layout<span class="hljs-operator">=</span>grid.layout<span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> respect<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>layout.pos.row<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Closed Splines&quot;</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> just<span class="hljs-operator">=</span><span class="hljs-string">&quot;bottom&quot;</span><span class="hljs-punctuation">)</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>xsplineTest<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_f94decc7bb0065535df11335806b6433.png"></p><h4 id="grid-path"><a href="#grid-path" class="headerlink" title="grid.path"></a>grid.path</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">pathGrob<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span><br>         id<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> id.lengths<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>         pathId<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> pathId.lengths<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>         rule<span class="hljs-operator">=</span><span class="hljs-string">&quot;winding&quot;</span><span class="hljs-punctuation">,</span><br>         default.units<span class="hljs-operator">=</span><span class="hljs-string">&quot;npc&quot;</span><span class="hljs-punctuation">,</span><br>         name<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> vp<span class="hljs-operator">=</span><span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br>grid.path<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><table><thead><tr><th><code>x</code></th><th>指定 x-locations 的数值向量或单位对象。</th></tr></thead><tbody><tr><td><code>y</code></td><td>指定 y-locations 的数值向量或单位对象。</td></tr><tr><td><code>id</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分隔为 sub-paths 的数值向量。所有具有相同<code>id</code>的位置都属于相同的sub-path。</td></tr><tr><td><code>id.lengths</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分隔为 sub-paths 的数值向量。指定组成单独sub-paths的连续位置块。</td></tr><tr><td><code>pathId</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分隔成不同路径的数值向量。所有具有相同 <code>pathId</code> 的位置都属于同一路径。</td></tr><tr><td><code>pathId.lengths</code></td><td>用于将 <code>x</code> 和 <code>y</code> 中的位置分隔成路径的数值向量。指定组成单独路径的连续位置块。</td></tr><tr><td><code>rule</code></td><td>指定填充规则的字符值： <code>&quot;winding&quot;</code> 或 <code>&quot;evenodd&quot;</code> 。</td></tr><tr><td><code>default.units</code></td><td>指示 <code>x</code> 或 <code>y</code> 仅作为数值向量给出时使用的默认单位的字符串。</td></tr><tr><td><code>name</code></td><td>字符标识符。</td></tr><tr><td><code>gp</code></td><td>类 <code>&quot;gpar&quot;</code> 的对象，通常是调用函数 <code>gpar</code> 的输出。这本质上是图形参数设置的列表。</td></tr><tr><td><code>vp</code></td><td>网格视口对象(或 NULL)。</td></tr><tr><td><code>...</code></td><td>传递给 <code>pathGrob()</code> 的参数。</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>angle <span class="hljs-operator">&lt;-</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">*</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span><br>grid.path<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">0.25</span><span class="hljs-operator">+</span><span class="hljs-number">0.15</span><span class="hljs-operator">*</span><span class="hljs-built_in">cos</span><span class="hljs-punctuation">(</span>angle<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-operator">+</span><span class="hljs-number">0.3</span><span class="hljs-operator">*</span><span class="hljs-built_in">sin</span><span class="hljs-punctuation">(</span>angle<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;grey&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.path<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.75</span><span class="hljs-operator">+</span><span class="hljs-number">0.15</span><span class="hljs-operator">*</span><span class="hljs-built_in">cos</span><span class="hljs-punctuation">(</span>angle<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">.7</span><span class="hljs-punctuation">,</span><span class="hljs-number">.7</span><span class="hljs-punctuation">,</span><span class="hljs-number">.8</span><span class="hljs-punctuation">,</span><span class="hljs-number">.8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          y<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-operator">+</span><span class="hljs-number">0.3</span><span class="hljs-operator">*</span><span class="hljs-built_in">sin</span><span class="hljs-punctuation">(</span>angle<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">.4</span><span class="hljs-punctuation">,</span><span class="hljs-number">.6</span><span class="hljs-punctuation">,</span><span class="hljs-number">.6</span><span class="hljs-punctuation">,</span><span class="hljs-number">.4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          id <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">9</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_55d3e61ab3b6ec761d9955633ace66d0.png"></p><h4 id="grid-point"><a href="#grid-point" class="headerlink" title="grid.point"></a>grid.point</h4><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><h4 id="viewpor"><a href="#viewpor" class="headerlink" title="viewpor()"></a>viewpor()</h4><p>viewport()创建新的视图，grid会默认生成一个根视图，这个视图对应整个页面，绘图是在整个页面，绘图是在整个页面中进行的，使用默认的绘图参数设置，直到创建新的视图为止。</p><h4 id="pushViewport"><a href="#pushViewport" class="headerlink" title="pushViewport()"></a>pushViewport()</h4><p>pushViewport()调入一个viewport()对象，并用它在糊涂设备上创建一个区域，这个区域成为后续图形输出的绘图背景。</p><h4 id="popViewport"><a href="#popViewport" class="headerlink" title="popViewport()"></a>popViewport()</h4><p>popViewport()函数有一个整数参数，默认的整数参数的值是1，指返回上一级的viewport()，整数参数为0，指返回最上级（root）viewport。</p><p>使用上面的三个视图函数绘图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;top-left corner&quot;</span><span class="hljs-punctuation">,</span>x <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;left&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;top&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">## 创建第一个视图</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>width <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span>height <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span>name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;vp1&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.rect<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;top-left coener&quot;</span><span class="hljs-punctuation">,</span>x<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;left&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;top&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">## 创建第二个视图</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>width <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span>height <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span>name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;vp2&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.rect<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;top-left coener&quot;</span><span class="hljs-punctuation">,</span>x<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;left&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;top&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">## 创建第三个视图</span><br>pushViewport<span class="hljs-punctuation">(</span>viewport<span class="hljs-punctuation">(</span>width <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span>height <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span>name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;vp3&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>grid.rect<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;top-left coener&quot;</span><span class="hljs-punctuation">,</span>x<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;left&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;top&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">## </span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;bottom-right coener&quot;</span><span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>x <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;right&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;bottom&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">##</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;bottom-right coener&quot;</span><span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>x <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;right&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;bottom&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;green&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">##</span><br>popViewport<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>grid.text<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;bottom-right coener&quot;</span><span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>x <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;npc&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;mm&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>just <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;right&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;bottom&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span><span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_603d37deb937380236d3e7372244546d.png"></p><h4 id="upViewport函数和downViewport函数"><a href="#upViewport函数和downViewport函数" class="headerlink" title="upViewport函数和downViewport函数"></a>upViewport函数和downViewport函数</h4><p>upViewport()和downViewport()和popViewport函数的区别在于，popViewpoprt()会从页面中移除当前视图，但是upViewport和downViewport不会。</p><h4 id="seekViewport"><a href="#seekViewport" class="headerlink" title="seekViewport()"></a>seekViewport()</h4><p>seekViewport用于遍历视图树，在交互过程总会比较方便。</p><h3 id="视图列表，栈，树"><a href="#视图列表，栈，树" class="headerlink" title="视图列表，栈，树"></a>视图列表，栈，树</h3><ul><li>vpList()</li><li>vpStack()</li><li>vpTree()</li></ul><h2 id="grid绘图对象模型"><a href="#grid绘图对象模型" class="headerlink" title="grid绘图对象模型"></a>grid绘图对象模型</h2><h3 id="绘图元件grob"><a href="#绘图元件grob" class="headerlink" title="绘图元件grob"></a>绘图元件grob</h3><h4 id="grid-ls"><a href="#grid-ls" class="headerlink" title="grid.ls()"></a>grid.ls()</h4><p>grid.list()会显示的列出所有的绘图元件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.circle<span class="hljs-punctuation">(</span>r<span class="hljs-operator">=</span><span class="hljs-number">.4</span><span class="hljs-punctuation">,</span>name<span class="hljs-operator">=</span><span class="hljs-string">&quot;mycircle&quot;</span><span class="hljs-punctuation">)</span><br>grid.ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># mycircle</span><br></code></pre></td></tr></table></figure><h4 id="grid-edit"><a href="#grid-edit" class="headerlink" title="grid.edit()"></a>grid.edit()</h4><p>grid.edit()修改列表中的绘图元件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>grid.circle<span class="hljs-punctuation">(</span>r<span class="hljs-operator">=</span><span class="hljs-number">.4</span><span class="hljs-punctuation">,</span>name<span class="hljs-operator">=</span><span class="hljs-string">&quot;mycircle&quot;</span><span class="hljs-punctuation">)</span><br>grid.ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># mycircle</span><br>grid.edit<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;mycircle&quot;</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><img src="https://markdown.liuchengtu.com/work/uploads/upload_96befd38beafcfaef7a37e45c348c91a.png" style="zoom:50%;" /><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">suffix <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;odd&#x27;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&#x27;even&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span> <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;circle&quot;</span><span class="hljs-punctuation">,</span>suffix<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><br>grid.newpage<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  grid.circle<span class="hljs-punctuation">(</span>name <span class="hljs-operator">=</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>r<span class="hljs-operator">=</span><span class="hljs-punctuation">(</span><span class="hljs-number">9</span><span class="hljs-operator">-</span>i<span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-number">20</span><span class="hljs-punctuation">,</span>gp<span class="hljs-operator">=</span>gpar<span class="hljs-punctuation">(</span>col<span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>gray<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-comment"># grid.ls()</span><br>grid.edit<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;circleodd&quot;</span><span class="hljs-punctuation">,</span>gp <span class="hljs-operator">=</span> gpar<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>global <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p> <img src="https://markdown.liuchengtu.com/work/uploads/upload_7b72d116d31c0da411ee56e9e9a0ce53.png"></p><h3 id="图形树gTrees"><a href="#图形树gTrees" class="headerlink" title="图形树gTrees"></a>图形树gTrees</h3><h4 id="捕捉和输出"><a href="#捕捉和输出" class="headerlink" title="捕捉和输出"></a>捕捉和输出</h4><h4 id="grid-grab和grid-grabExpr"><a href="#grid-grab和grid-grabExpr" class="headerlink" title="grid.grab和grid.grabExpr"></a>grid.grab和grid.grabExpr</h4>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/25/javascript/javascript%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2024/05/25/javascript/javascript%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="javascript中的基础数据类型01"><a href="#javascript中的基础数据类型01" class="headerlink" title="javascript中的基础数据类型01"></a>javascript中的基础数据类型01</h1><h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>javascript中数值只有一种类型，没有细分出浮点型和整型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> num1 = <span class="hljs-number">123</span><br><span class="hljs-keyword">let</span>  num2 = <span class="hljs-number">123.5</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> num1,<span class="hljs-string">&#x27;\t&#x27;</span>,<span class="hljs-keyword">typeof</span> num2)<br><span class="hljs-comment">//输出内容：number number</span><br></code></pre></td></tr></table></figure><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h4><blockquote><p>注意区分++a 和 a++的区别，一个是先运算再赋值，一个是先赋值再运算。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># 加 + 减 - 乘 * 除 / 求余 % 自增++ 自减 --<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 + num2)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 - num2)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 * num2)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 / num2)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 % num2)<br><br><span class="hljs-comment">//246.5</span><br><span class="hljs-comment">//-0.5</span><br><span class="hljs-comment">//15190.5</span><br><span class="hljs-comment">//0.9959514170040485</span><br><span class="hljs-comment">//123</span><br></code></pre></td></tr></table></figure><h4 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h4><ul><li>等于 (<code>==</code>)：值相等</li><li>全等 (<code>===</code>) : 值相同，同时类型也相同</li><li>不等于 (<code>!=</code>)：值不相等</li><li>不全等 (<code>!==</code>)：值不相同同时类型也不相同</li><li>大于 (<code>&gt;</code>)</li><li>小于 (<code>&lt;</code>)</li><li>大于等于 (<code>&gt;=</code>)</li><li>小于等于 (<code>&lt;=</code>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> num3 = <span class="hljs-number">123</span><br><span class="hljs-keyword">let</span> num4 = <span class="hljs-number">123.00</span><br>result = num3 === num4 ? <span class="hljs-string">&quot;全等&quot;</span>:<span class="hljs-string">&quot;不全等&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result)<br><span class="hljs-comment">// 全等</span><br></code></pre></td></tr></table></figure><h4 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h4><ul><li>赋值 (<code>=</code>)</li><li>加等于 (<code>+=</code>)</li><li>减等于 (<code>-=</code>)</li><li>乘等于 (<code>*=</code>)</li><li>除等于 (<code>/=</code>)</li><li>取余等于 (<code>%=</code>)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num1 += num1)<br><span class="hljs-comment">//246</span><br></code></pre></td></tr></table></figure><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><ul><li>Number()构造函数，<code>Number</code> 构造函数也可以用来将其他类型的值转换为数值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> str1 = <span class="hljs-string">&quot;BSS&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(str1)) <span class="hljs-comment">// NaN</span><br><span class="hljs-keyword">let</span> str2 = <span class="hljs-string">&quot;1234n&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(str2)) <span class="hljs-comment">// NaN</span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Num1</span> = <span class="hljs-string">&quot;123&quot;</span> <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(<span class="hljs-title class_">Num1</span>)) <span class="hljs-comment">// 123</span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Num2</span> = <span class="hljs-number">123213423414123432n</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Number</span>(<span class="hljs-title class_">Num2</span>)) <span class="hljs-comment">//123213423414123420</span><br></code></pre></td></tr></table></figure><ul><li><code>parseInt()</code>和<code>parseFloat()</code>进行字符串到整数或浮点数的转换，注意如果字符串开头不是数字，则直接返回NaN，不会对下面的数据进行检查。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str1</span> = <span class="hljs-string">&quot;12312334ab&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Str1</span>)) <span class="hljs-comment">//12312334</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">parseFloat</span>(<span class="hljs-title class_">Str1</span>)) <span class="hljs-comment">//12312334</span><br><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str2</span> = <span class="hljs-string">&quot;ab12312334&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Str2</span>)) <span class="hljs-comment">//NaN</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-built_in">parseFloat</span>(<span class="hljs-title class_">Str2</span>)) <span class="hljs-comment">//NaN</span><br></code></pre></td></tr></table></figure><h4 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(-<span class="hljs-number">1</span>)) <span class="hljs-comment">//1</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">exp</span>(<span class="hljs-number">10</span>)) <span class="hljs-comment">//22026.465794806718</span><br><span class="hljs-comment">//Math.round()等</span><br></code></pre></td></tr></table></figure><h4 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h4><ul><li><code>toString()</code> 主要是用于将数字转换为字符串（可以是任何进制），而 <code>toFixed()</code> 是用于将数字格式化为具有指定小数位数的字符串。</li><li><strong>四舍五入</strong>：<code>toString()</code> 不会进行四舍五入，它只是简单地将数字转换为字符串。而 <code>toFixed()</code> 会根据指定的小数位数对数字进行四舍五入。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-variable constant_">H1</span> = <span class="hljs-number">123</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable constant_">H1</span>.<span class="hljs-title function_">toString</span>()) <span class="hljs-comment">//123</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable constant_">H1</span>.<span class="hljs-title function_">toFixed</span>()) <span class="hljs-comment">//123</span><br><br><span class="hljs-keyword">let</span> num = <span class="hljs-number">123</span>;  <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-title function_">toString</span>()); <span class="hljs-comment">// 输出: &quot;123&quot;  </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">2</span>)); <span class="hljs-comment">// 输出: &quot;1111011&quot; (二进制)  </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>)); <span class="hljs-comment">// 输出: &quot;7b&quot; (十六进制)</span><br><br><span class="hljs-keyword">let</span> num = <span class="hljs-number">123.456789</span>;  <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>)); <span class="hljs-comment">// 输出: &quot;123.46&quot;  </span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(num.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">4</span>)); <span class="hljs-comment">// 输出: &quot;123.4568&quot;</span><br></code></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>在 JavaScript 中，你可以选择单引号（<code>&#39;</code>）、双引号（<code>&quot;</code>）或反引号（&#96;&#96;&#96;）来包裹字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> single = <span class="hljs-string">&#x27;单引号&#x27;</span><br><span class="hljs-keyword">const</span> double = <span class="hljs-string">&quot;双引号&quot;</span><br><span class="hljs-keyword">const</span> backtick = <span class="hljs-string">`反引号`</span><br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(single)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(double)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(backtick)<br></code></pre></td></tr></table></figure><h3 id="模版字面量"><a href="#模版字面量" class="headerlink" title="模版字面量"></a>模版字面量</h3><p>javascript中也有类似shell脚本中的模版字面量，使用${}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str3</span> = <span class="hljs-string">&quot;ABC&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`this is a <span class="hljs-subst">$&#123;Str3&#125;</span>`</span>) <span class="hljs-comment">//this is a ABC</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`this result is <span class="hljs-subst">$&#123;(<span class="hljs-number">1</span>+<span class="hljs-number">2</span>+<span class="hljs-string">&quot;123&quot;</span>)&#125;</span>`</span>) <span class="hljs-comment">// this result is 3123</span><br></code></pre></td></tr></table></figure><h3 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-title function_">toLowerCase</span>()) <span class="hljs-comment">//abc</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-title function_">toUpperCase</span>()) <span class="hljs-comment">//ABC</span><br></code></pre></td></tr></table></figure><h3 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-property">length</span>) <span class="hljs-comment">//3</span><br></code></pre></td></tr></table></figure><h3 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h3><p>字符串切割返回的结果是数据类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>)) <span class="hljs-comment">//[ &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27; ] </span><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str4</span> = <span class="hljs-string">&quot;A|B|C&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str4</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;|&quot;</span>))<span class="hljs-comment">//[ &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27; ] </span><br></code></pre></td></tr></table></figure><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span> + <span class="hljs-string">&#x27;_&#x27;</span>+  <span class="hljs-title class_">Str4</span>) <span class="hljs-comment">//ABC_A|B|C</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">Str4</span>)) <span class="hljs-comment">//ABCA|B|C</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str3</span>.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">Str4</span>,<span class="hljs-title class_">Str4</span>,str1)) <span class="hljs-comment">//ABCA|B|CA|B|CBSS</span><br></code></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ul><li><code>slice(start, end)</code>: 返回从 <code>start</code> 到 <code>end</code>（不包括 <code>end</code>）的字符串部分。</li><li><code>substring(start, end)</code>: 与 <code>slice()</code> 类似，但不接受负索引。</li><li><code>substr(start, length)</code>: 返回从 <code>start</code> 开始的，长度为 <code>length</code> 的字符串部分。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;Hello&quot;</span>;  <br><span class="hljs-keyword">let</span> firstChar = str[<span class="hljs-number">0</span>]; <span class="hljs-comment">// &quot;H&quot;</span><br><br><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;Hello, world!&quot;</span>;  <br><span class="hljs-keyword">let</span> sliced = str.<span class="hljs-title function_">slice</span>(<span class="hljs-number">7</span>, <span class="hljs-number">12</span>); <span class="hljs-comment">// &quot;world&quot;</span><br><br><span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;Hello, world!&quot;</span>;  <br><span class="hljs-keyword">let</span> replaced = str.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&quot;world&quot;</span>, <span class="hljs-string">&quot;JavaScript&quot;</span>); <span class="hljs-comment">// &quot;Hello, JavaScript!&quot;</span><br></code></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><ul><li><code>indexOf(searchString, position)</code>: 返回指定字符串值在字符串中<strong>首次出现的位置</strong>，从指定的位置开始搜索。</li><li><code>lastIndexOf(searchString, position)</code>: 返回指定字符串值在字符串中<strong>最后出现的位置</strong>，从指定的位置开始反向搜索。</li><li><code>includes(searchString, position)</code>: 判断字符串是否包含指定的子串，返回布尔值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str5</span> = <span class="hljs-string">&quot;hello world I use javascript&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str5</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;I&quot;</span>)) <span class="hljs-comment">// 12</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str5</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;java&quot;</span>))<span class="hljs-comment">//18</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str5</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;java&quot;</span>))<span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h3 id="字符串去除空格"><a href="#字符串去除空格" class="headerlink" title="字符串去除空格"></a>字符串去除空格</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">Str6</span> = <span class="hljs-string">&quot; ACD  &quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str6</span>.<span class="hljs-title function_">trim</span>())<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str6</span>.<span class="hljs-title function_">trimStart</span>())<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str6</span>.<span class="hljs-title function_">trimEnd</span>())<br></code></pre></td></tr></table></figure><p><img src="https://markdown.liuchengtu.com/work/uploads/upload_105e49d794f3fa840a32979b7314d708.png"> </p><h3 id="判断开头和结尾"><a href="#判断开头和结尾" class="headerlink" title="判断开头和结尾"></a>判断开头和结尾</h3><p>startsWith()和endsWith()返回布尔值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str5</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&quot;hello&quot;</span>))<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Str5</span>.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">&quot;hello&quot;</span>))<br></code></pre></td></tr></table></figure><h2 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h2><p>javascript中的布尔值只有两个，分布是true和false，全是小写字母</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;test1&quot;</span>)<br>&#125; <span class="hljs-comment">//test1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2024/01/09/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/01/09/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/09/03/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E9%94%AE%E7%9B%98%E5%92%8C%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/"/>
    <url>/2023/09/03/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E8%AF%AD%E8%A8%80%E4%B8%AD%E9%94%AE%E7%9B%98%E5%92%8C%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="R语言中键盘和鼠标事件"><a href="#R语言中键盘和鼠标事件" class="headerlink" title="R语言中键盘和鼠标事件"></a>R语言中键盘和鼠标事件</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/08/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E4%B8%AD%E7%9A%84%E9%9D%9E%E6%A0%87%E5%87%86%E8%AF%84%E4%BC%B0/"/>
    <url>/2023/08/14/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/R%E4%B8%AD%E7%9A%84%E9%9D%9E%E6%A0%87%E5%87%86%E8%AF%84%E4%BC%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="R中的非标准评估"><a href="#R中的非标准评估" class="headerlink" title="R中的非标准评估"></a>R中的非标准评估</h1><h2 id="什么是非标准评估"><a href="#什么是非标准评估" class="headerlink" title="什么是非标准评估"></a>什么是非标准评估</h2><p>非标准评估（Non-standard evaluation，简称NSE）是R语言中的一个重要概念，涉及到如何处理变量、表达式和函数的名称。在标准的编程语言中，通常使用变量的名称来引用和操作变量，但在非标准评估中，变量的名称可能不是直接的字符串，而是以某种形式传递给函数或表达式。<font color="red"> 简单的说就是在编写函数的时候，有时候参数的传入是字符串，但是我们在函数体内传入的不是字符串，此时就需要使用标准评估进项转化。</font></p><p><strong>Tidy Evaluation (Tidy Eval)，不是一个宏包，而是一个非标准评估的框架，也叫延迟评估。主要目的是更方便地与tidyverse里的函数配合使用，事实上，很多时候我们不一定需要用到它</strong></p><ol><li>**enquo()**：<code>enquo</code> 是 “enquoting” 的缩写，用于创建一个引用（quosure）对象，将变量捕捉到一个对象中，以便在非标准评估环境中使用。它可以用来保存传递给函数的参数，并在函数内部使用。</li><li>**!!**（bang-bang）：<code>!!</code> 运算符，也叫 “unquote-splice” 运算符，用于将一个引用（quosure）解引用，使其成为正常的R表达式。它在函数内部用于执行非标准评估，将引用的值插入到表达式中。</li><li>**!!!**（triple-bang）：<code>!!!</code> 运算符，也叫 “unquote-splice” 运算符，用于将引用列表（list of quosures）解引用并展开成单个表达式。它允许您将多个引用嵌入到表达式中，以进行多个非标准评估操作。</li><li>**sym()**：<code>sym</code> 函数用于将字符转换为符号（symbol）。符号是一个表示R语言变量名的对象，可以在非标准评估环境中使用。</li><li>**syms()**：<code>syms</code> 函数用于将多个字符转换为一组符号。这在需要处理多个变量名时很有用，例如在循环中构建非标准评估的表达式</li></ol><h2 id="enquo"><a href="#enquo" class="headerlink" title="enquo()"></a>enquo()</h2><p>enquo是rlang包中用于非标准评估的函数之一，用于将变量捕获为引用对象(quosure)，以便在函数内部使用。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rlang<span class="hljs-punctuation">)</span><br><br>data <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>value <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">30</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>calculate_mean <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> column<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  column_quo <span class="hljs-operator">&lt;-</span> enquo<span class="hljs-punctuation">(</span>column<span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 捕获变量为引用对象</span><br>  <br>  mean_value <span class="hljs-operator">&lt;-</span> data <span class="hljs-operator">%&gt;%</span><br>    summarise<span class="hljs-punctuation">(</span>mean_value <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-operator">!</span>column_quo<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 使用 !! 解引用引用对象</span><br>  <br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>mean_value<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>result <span class="hljs-operator">&lt;-</span> calculate_mean<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> column <span class="hljs-operator">=</span> value<span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span>result<span class="hljs-operator">$</span>mean_value<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 输出20</span><br></code></pre></td></tr></table></figure><p>在R中，<code>!!</code>（双感叹号）是 <code>rlang</code> 包中用于非标准评估（Non-Standard Evaluation，NSE）的一个关键运算符，它用于解引用引用（quosure）对象，将其嵌入到表达式中。在非标准评估环境中，<code>!!</code> 通常与 <code>enquo()</code> 函数一起使用，以便在函数内部引用外部变量。</p><p><font color="green">在上面的函数中value是环境变量名称没如果需要需要将value当中data数据框中的一列进行应用，需要对数据进行应用（quote）和解引用（unqote）两步</font></p><ul><li>第一步，用 <code>enquo()</code>把用户传递过来的参数引用起来（<strong>引用</strong>可以理解为<strong>冷冻</strong>起来）</li><li>第二步，用 <code>!!</code> 解开这个引用（<strong>解引用</strong>可以理解为<strong>解冷</strong>），然后使用参数的内容</li></ul><p>这个<code>quote-unquote</code>的过程让环境变量名变成了数据变量，也可以理解为在函数评估过程中，数据变量（data-variable）遮盖了环境变量（env-variable），即数据遮盖（data masking），看到value，正常情况下，本来应该是到环境变量里去找这个valuel对应的值，然而，数据遮盖机制，插队了，让代码去数据变量中去找valuel以及对应的值。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
